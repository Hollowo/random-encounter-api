generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Address {
  id          String   @id @unique @map("id")
  createdAt   DateTime @default(now()) @map("created_at")
  description String   @map("description")
  cityId      String   @map("city_id")
  provinceId  String   @map("province_id")
  countryId   String   @map("country_id")
  city        City     @relation(fields: [cityId], references: [id])
  country     Country  @relation(fields: [countryId], references: [id])
  province    Province @relation(fields: [provinceId], references: [id])
  user        User[]

  @@map("address")
}

model Country {
  id       String     @id @unique @map("id")
  name     String     @map("name")
  flag     String     @map("flag")
  Address  Address[]
  Province Province[]

  @@map("country")
}

model Province {
  id        String    @id @unique @map("id")
  name      String    @map("name")
  countryId String    @map("country_id")
  Address   Address[]
  City      City[]
  country   Country   @relation(fields: [countryId], references: [id])

  @@map("province")
}

model City {
  id         String    @id @unique @map("id")
  name       String    @map("name")
  provinceId String    @map("province_id")
  Address    Address[]
  province   Province  @relation(fields: [provinceId], references: [id])

  @@map("city")
}

model User {
  id           String        @id @unique @map("id")
  createdAt    DateTime      @default(now()) @map("created_at")
  name         String        @map("name")
  email        String        @map("email")
  role         Role          @map("role")
  authorized   Boolean       @map("authorized")
  addressId    String        @map("address_id")
  password     String        @map("password")
  refreshToken String        @map("refresh_token")
  address      Address       @relation(fields: [addressId], references: [id])
  Table        Table[]
  TablePlayer  TablePlayer[]
  TableInvites TableInvite[]

  @@map("user")
}

model System {
  id        String      @id @unique @map("id")
  name      String      @map("name")
  Table     Table[]
  Encounter Encounter[]

  @@map("system")
}

model Table {
  id           String        @id @unique @map("id")
  createdAt    DateTime      @default(now()) @map("created_at")
  title        String        @map("title")
  description  String        @map("description")
  imageUrl     String        @map("image_url")
  ownerId      String        @map("owner_id")
  systemId     String        @map("system_id")
  user         User          @relation(fields: [ownerId], references: [id])
  system       System        @relation(fields: [systemId], references: [id])
  TablePlayer  TablePlayer[]
  TableInvites TableInvite[]
  Encounter    Encounter[]
  Session      Session[]

  @@map("table")
}

model Session {
  id        String   @id @unique @map("id")
  createdAt DateTime @default(now()) @map("created_at")
  tableId   String   @map("table_id")
  date      DateTime @map("date")
  table     Table    @relation(fields: [tableId], references: [id])

  @@map("session")
}

model TablePlayer {
  tableId   String   @map("table_id")
  userId    String   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  table     Table    @relation(fields: [tableId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@id([tableId, userId])
  @@map("table_player")
}

model TableInvite {
  tableId       String   @map("table_id")
  userId        String   @map("user_id")
  isJoinRequest Boolean  @map("is_join_request")
  checked       Boolean  @map("checked")
  createdAt     DateTime @default(now()) @map("created_at")
  table         Table    @relation(fields: [tableId], references: [id])
  user          User     @relation(fields: [userId], references: [id])

  @@id([tableId, userId])
  @@map("table_invites")
}

model Encounter {
  id          String   @id @unique @map("id")
  createdAt   DateTime @default(now()) @map("created_at")
  level       Float    @map("level")
  description String   @map("description")
  tableId     String   @map("table_id")
  systemId    String   @map("system_id")
  table       Table    @relation(fields: [tableId], references: [id])
  system      System   @relation(fields: [systemId], references: [id])

  @@map("encounter")
}

enum Role {
  USER
  ADMIN
}
